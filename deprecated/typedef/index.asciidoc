---
tags: []
title: typedef
---

`typedef` is a keyword in C which allows a new variable type to be
specified. `typedef` allows a new word to be used as an alias for the
user-specified variable type.

Recall from Problem Set 5 the header file `bmp.h` which contains the
following lines of code:

[source,C]
-------------------------------------------------------------------------------
/* 
 * Common Data Types 
 *
 * The data types in this section are essentially aliases for C/C++ 
 * primitive data types.
 *
 * Adapted from http://msdn.microsoft.com/en-us/library/cc230309(PROT.10).aspx.
 * See http://en.wikipedia.org/wiki/Stdint.h for more on stdint.h.
 */

typedef uint8_t  BYTE;
typedef uint32_t DWORD;
typedef int32_t  LONG;
typedef uint16_t WORD;
-------------------------------------------------------------------------------

For the remainder of the problem set, we were able to use the word
`BYTE` as an alias for the already-defined variable type `uint8_t`. In
fact, if we so chose, we could use `typedef` to create an alias for
`[[int]]` like so:

[source,C]
---------------------
typedef int A_NUMBER;

A_NUMBER foo = 6;
int bar = 6;
---------------------

Having used `typedef` in this way, the two lines of code above are
identical (except for the names of the variables).

`typedef` can be used for even more complex aliasing, as exemplified by
these other lines of code from `bmp.h`:

[source,C]
-----------------------------------------------------------------------------
/*
 * BITMAPFILEHEADER
 *
 * The BITMAPFILEHEADER structure contains information about the type, size,
 * and layout of a file that contains a DIB [device-independent bitmap].
 *
 * Adapted from http://msdn.microsoft.com/en-us/library/dd183374(VS.85).aspx.
 */

typedef struct 
{ 
    WORD   bfType; 
    DWORD  bfSize; 
    WORD   bfReserved1; 
    WORD   bfReserved2; 
    DWORD  bfOffBits; 
} __attribute__((__packed__)) 
BITMAPFILEHEADER;
-----------------------------------------------------------------------------

Now, the keyword `BITMAPFILEHEADER` can be used as shorthand for the
entire `[[struct]]` definition.

Category: Week 4[Category: Week 4]
