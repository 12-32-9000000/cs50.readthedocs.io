= HarvardMaps API
:toc: left

The HarvardMaps API allows you to request data programmatically from
http://maps.cs50.net/[HarvardMaps] in
http://en.wikipedia.org/wiki/JSON[JSON],
http://en.wikipedia.org/wiki/JSON#JSONP[JSONP], or
http://en.wikipedia.org/wiki/XML[XML] format. The API provides a
http://en.wikipedia.org/wiki/Representational_State_Transfer[RESTful]
interface, which means that you can query it using simple HTTP GET
requests.

== License

Use of this API is governed by a
http://creativecommons.org/licenses/by-nc/3.0/[Creative Commons
Attribution-Noncommerical 3.0 Unported] license, which means that you
may use its data for non-commercial purposes so long as you attribute
your data to this API, as by including a link to
http://maps.cs50.net/[HarvardMaps] in your own work. To discuss
commercial purposes, contact the author.

== Registration

To use this API, you must https://docs.cs50.net/#plans[register for an API key].

== Limits

Usage of this API is limited to 60 queries per minute.

== Methods

All methods support
http://en.wikipedia.org/wiki/Cross-Origin_Resource_Sharing[CORS].

== Try it out!

The online https://docs.cs50.net/docs[documentation] allows you, once you sign in, 
to try out making queries on you own, so be sure to try out some queries and see how it works.

== Bug Report
If you find bugs in any CS50 API, email mailto:api@cs50.net[api@cs50.net] with your bug.


[[buildings]]
=== buildings

To query the HarvardMaps API for buildings, contact the server via URLs
in this format:

`http://api.cs50.net/maps/2/buildings?param1=value1&param2=value2&...`

Supported parameters include:

[cols=",",options="header",]
|=======================================================================
|parameter |description
|root |_Optional._ Comma-separated list of buildings' roots. If omitted,
all buildings will be returned. If this parameter is provided, *id*
should not be.

|id |_Optional._ Comma-separated list of buildings' IDs. If omitted, all
buildings will be returned. If this parameter is provided, *root* should
not be.

|callback |_Required iff *output* is *jsonp*_. Callback function with
which response will be padded.

|output |_Required._ Format for output. Must be *json*, *jsonp*, or *xml*.
|=======================================================================

If any parameters are malformed or any required parameters are omitted,
an empty response will be returned along with, possibly, HTTP status
code
http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1[400 Bad
Request].

Harvard is in the process of transitioning "building IDs" (aka bids, aka
BL_IDs) to "roots" as unique identifies for buildings. This API supports
both for backwards compatibility's sake. Note that buildings' IDs are
not strictly numeric; some are alphanumeric. All roots should be 5-digit
values. Some building IDs and some roots include leading zeroes.

==== JSON

If you request channels in JSON format (e.g.,
http://api.cs50.net/maps/2/buildings?root=03364,03365&output=json),
the response wil be an array of objects, per the below:

[source,javascript]
----
[
   {
      "root":"03364",
      "id":"991",
      "name":"Mather House",
      "lat":"42.368270",
      "lng":"-71.115270"
   },
   {
      "root":"03365",
      "id":"952",
      "name":"Matthews Hall",
      "lat":"42.374070",
      "lng":"-71.118150"
   }
]
----


==== JSONP

If you request channels in JSONP format (e.g.,
http://api.cs50.net/maps/2/buildings?root=03364,03365&output=jsonp&callback=parseResponse),
the response will be a padded array of objects, per the below:

[source,javascript]
----
parseResponse([{"root":"03364","id":"991","name":"Mather House","lat":"42.368270","lng":"-71.115270"},{"root":"03365","id":"952","name":"Matthews Hall","lat":"42.374070","lng":"-71.118150"}])
----

==== XML

If you request data in XML format (e.g.,
http://api.cs50.net/maps/2/buildings?root=03364,03365&output=xml), the
response will be an XML document whose root element is *buildings*, each
of whose children is a *building*, per the below:

[source,xml]
----
<?xml version="1.0" encoding="utf-8"?>
<buildings>
  <building>
    <root>03364</root>
    <id>991</id>
    <name>Mather House</name>
    <lat>42.368153055571</lat>
    <lng>-71.115234108143</lng>
  </building>
  <building>
    <root>03365</root>
    <id>952</id>
    <name>Matthews Hall</name>
    <lat>42.374068817179</lat>
    <lng>-71.118154165321</lng>
  </building>
</buildings>
----


==== Examples

* Returns all buildings:
** http://api.cs50.net/maps/2/buildings?output=json
** http://api.cs50.net/maps/2/buildings?output=jsonp&callback=parseResponse
** http://api.cs50.net/maps/2/buildings?output=xml
* Returns Mather House:
** http://api.cs50.net/maps/2/buildings?id=991&output=json
** http://api.cs50.net/maps/2/buildings?id=991&output=jsonp&callback=parseResponse
** http://api.cs50.net/maps/2/buildings?id=991&output=xml


== External Links

* http://en.wikipedia.org/wiki/JSON[JSON]
* http://en.wikipedia.org/wiki/JSON#JSONP[JSONP]
* http://en.wikipedia.org/wiki/XML[XML]

== Changelog

* http://wiki.cs50.net.php?title=HarvardMaps_API&oldid=1009[1.0]
* http://wiki.cs50.net.php?title=HarvardMaps_API&oldid=1950[1.1]
** Added support for JSONP
*
https://manual.cs50.net.php?title=HarvardMaps_API&oldid=4364[1.2]
** Added support for *root*.
** Added support for XML
* 1.3
** Fixed bug in CSV format whereby `address` header was omitted.
* 2
** Added API keys
** Changed backend to python
