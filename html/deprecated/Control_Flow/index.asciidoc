---
tags: []
title: Control Flow
---

Control flow describes the order in which statements are executed in a
program.

Normally, the flow of control in a program is linear: statements are
executed one at a time, from top to bottom, starting with the first
statement of a function known to begin program execution. In the case of
C, the main function signifies the beginning of a program and is the
first function that is run. (C also allows for statements at the
beginning of a file that allow the definition of some types, including
required files, and other tasks, but these could be considered "setup"
items that are necessary before the actual program is executed). Though
normally linear, some constructs like link:Condition[if statements] and
link:Loops[loops] can alter the control flow by allowing code to be
split into branches or repeat certain sections of code, respectively.

Typically, having easy-to-follow flow of control within a program is
important to its readability and design. While branches from
link:Condition[if statements], repeated segments of code from
link:Loops[loops], and the use of other constructs that disrupt normal
linear execution of code are often unavoidable, it's useful to not
create a control flow that becomes unreasonably difficult to interpret.
As an example, using a "goto" statement in C is sometimes considered to
be poor design, because it causes what some consider to be an
unnecessary break in linear control flow to jump to another portion of a
program which might instead benefit from the use of a new function.

Category:Week 0[Category:Week 0]
