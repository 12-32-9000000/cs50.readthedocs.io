---
tags: []
title: Problem_Set_2
---

*Deadline: Mon 10/4, 5:00am* (we'll want to get back onto a Friday
schedule next week, so please expect Fri 10/8 for pset3!)

For this problem set, you should do the below:

1.  Fetch your students' and render PDFs on the cloud.
2.  Grab copies of the *cs50/2010/pset2/username* and
*cs50/2010/hacker2/username* Google Spreadsheets. Hover over Column A
cells that have orange triangles to see comments.
3.  Assign Correctness, Design, and Style scores in each, using
link:#_grading_scripts[Mike's scripts] for assistance.
4.  Record grades at http://www.cs50.net/tools/[cs50.net/tools].
5.  Email your students their PDFs. Hang on to the PDFs too; we'll
eventually upload them to the cloud for archival.

_No Wufoo forms this time._


How to Fetch and Render
^^^^^^^^^^^^^^^^^^^^^^^

---------------------------------
export PATH=~cs50/staff/bin:$PATH
mkdir both2
fetch pset2 both2
fetch hacker2 both2
render pset2 both2/*.pset2
render hacker2 both2/*.hacker2
---------------------------------


Grading Scripts
---------------

The provided grading scripts should give you a rough estimate of a
student's score for the Correctness portion (unless they exactly copied
our output perfectly, in which case tthe grading is quite easy).
Depending on whether you are grading a hacker assignment or not you will
run the appropriate command on the cloud from inside a students
directory (e.g. from inside `both2/jharvard.hacker2`):

------------------------------------------------------
~mtucker/personal/scripts/trunk/pset2-scripts/pset2.pl
------------------------------------------------------

or

--------------------------------------------------------
~mtucker/personal/scripts/trunk/pset2-scripts/hacker2.pl
--------------------------------------------------------


Notes
~~~~~

* Be forewarned that your student may be wily and may have done things
that we didn't plan for: they might have unusual messages, they might
have used GetInt() to get the Caesar key, or they might have just done
things wrong that we didn't anticipate. If the scripts hang or don't
seem to reflect appropriately on the code that you are seeing, you may
need to tweak the student's code or scripts@cs50.net for help!
* If you want to check out the key/text combinations that are tested
look in the ~mtucker/personal/scripts/trunk/pset2-scripts in the
caesar_test_cases, vigenere_test_cases, etc. directories. In these
directories you will find files with names like
handles_multicase_plaintext-args.txt and
handles_multicase_plaintext-input.txt. The first file contains the
command line arguments that are passed, the second contains the user
input that is sent to the program. The expected result can be found in a
corresponding file without a -args or -input component (e.g.
handles_multicase_plaintext.txt). If you have questions ask!

