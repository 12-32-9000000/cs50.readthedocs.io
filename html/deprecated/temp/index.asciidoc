---
tags: []
title: temp
---

The HarvardFood API allows you to retrieve
http://www.dining.harvard.edu/[HUDS] menus in
http://en.wikipedia.org/wiki/Comma-separated_values[CSV],
http://en.wikipedia.org/wiki/JSON[JSON],
http://en.wikipedia.org/wiki/JSON#JSONP[JSONP], or
http://php.net/manual/en/function.serialize.php[serialized PHP]. Each
night, CS50 link:Screen Scraping[screen-scrapes] menus from
http://www.foodpro.huds.harvard.edu/foodpro/menu_items.asp[This Week's
Menu] and caches them in a local database that you can query. The API
provides a
http://en.wikipedia.org/wiki/Representational_State_Transfer[RESTful]
interface, which means that you can query it using simple HTTP GET
requests.

At the moment, HarvardFood exists only as an API, not as an app;
http://food.cs50.net/[food.cs50.net] redirects to this API
documentation. HarvardFood's database contains menus from 2009-10-28
through the present date plus 6 days into the future; only menus from
2010-11-10 onward include portions. This wiki's article on
link:Screen Scraping[Screen Scraping] discusses how this API gets its
data.

*Versions 1.3 and prior of this API are no longer operational.*


Author
------

To report bugs or request features, contact:

mailto:malan@post.harvard.edu[David J. Malan '99] +
http://www.cs.harvard.edu/malan/


License
-------

Use of this API is governed by a
http://creativecommons.org/licenses/by-nc/3.0/[Creative Commons
Attribution-Noncommerical 3.0 Unported] license, which means that you
may use its data for non-commercial purposes so long as you attribute
your data to this API, as by including a link to
http://food.cs50.net/[HarvardFood] in your own work. To discuss
commercial purposes, contact the author.


Methods
-------


facts
~~~~~

To query the HarvardFood API for nutritional facts, contact the server
via URLs in this format:

`http://food.cs50.net/api/1.3/facts?param1=value1&param2=value2&...`

Supported parameters include:

[cols=",",options="header",]
|====================================================================
|parameter |description
|recipe |_Required._ ID of recipe for which to get nutritional facts.
|portion |recipe's]] unit of measure; do not include unit itself.
|====================================================================

If any parameters are malformed or any required parameters are omitted,
an empty response will be returned along with, possibly, HTTP status
code
http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1[400 Bad
Request].

Some facts are only available as raw amounts; some facts are only
available as
http://www.fda.gov/food/labelingnutrition/consumerinformation/ucm078889.htm#see6[percent
daily values]. Percent daily values are based on a 2,000-calorie diet.
Facts are measured per the units below.

[cols=",,",options="header",]
|=============================
|Fact |Amount |Percent
|Calcium |_n/a_ |%
|Calories |cal |%
|Calories from Fat |cal |_n/a_
|Carbohydrate |_n/a_ |%
|Cholesterol |mg |%
|Dietary Fiber |g |%
|Iron |_n/a_ |%
|Protein |g |_n/a_
|Saturated Fat |g |%
|Sodium |mg |%
|Sugars |g |_n/a_
|Total Carbs |g |%
|Total Fat |g |%
|Trans Fat |g |_n/a_
|Vitamin A |_n/a_ |%
|Vitamin C |_n/a_ |%
|=============================


CSV
^^^

If you request data in CSV format (e.g.,
http://food.cs50.net/api/1.3/facts?recipe=117003&portion=1&output=csv),
the response will be a series of comma-delimited rows, per the below:

[code,text]
------------------------
fact,amount,percent
Calcium,,4
Calories,250,8
"Calories from Fat",135,
Carbohydrate,,4
Cholesterol,40,13
"Dietary Fiber",1,4
Iron,,10
Protein,15,24
"Saturated Fat",3.5,18
Sodium,570,24
Sugars,8,0
"Total Carbs",13,4
"Total Fat",,23
"Trans Fat",,0
"Vitamin A",,0
"Vitamin C",,0
------------------------

Note that the response's first row defines the CSV file's fields.
Fields' order may change over time, so do not hardcode indices into your
own code. Use that first row to determine fields' indices dynamically,
per this article on link:Neat_Tricks#Parsing_CSV[parsing CSV].


JSON
^^^^

If you request data in JSON format (e.g.,
http://food.cs50.net/api/1.3/facts?recipe=117003&portion=1&output=json),
the response will be an array of objects, per the below:

[code,javascript]
---------------------------------
[
   {
      "fact":"Calcium",
      "percent":4
   },
   {
      "fact":"Calories",
      "amount":250,
      "percent":8
   },
   {
      "fact":"Calories from Fat",
      "amount":135
   },
   {
      "fact":"Carbohydrate",
      "percent":4
   },
   {
      "fact":"Cholesterol",
      "amount":40,
      "percent":13
   },
   {
      "fact":"Dietary Fiber",
      "amount":1,
      "percent":4
   },
   {
      "fact":"Iron",
      "percent":10
   },
   {
      "fact":"Protein",
      "amount":15,
      "percent":24
   },
   {
      "fact":"Saturated Fat",
      "amount":3.5,
      "percent":18
   },
   {
      "fact":"Sodium",
      "amount":570,
      "percent":24
   },
   {
      "fact":"Sugars",
      "amount":8,
      "percent":0
   },
   {
      "fact":"Total Carbs",
      "amount":13,
      "percent":4
   },
   {
      "fact":"Total Fat",
      "percent":23
   },
   {
      "fact":"Trans Fat",
      "percent":0
   },
   {
      "fact":"Vitamin A",
      "percent":0
   },
   {
      "fact":"Vitamin C",
      "percent":0
   }
]
---------------------------------


JSONP
^^^^^

If you request data in JSONP format (e.g.,
http://food.cs50.net/api/1.3/facts?recipe=117003&portion=1&output=jsonp&callback=parseResponse),
the response will be a padded array of objects, per the below:

[code,javascript]

parseResponse([{"fact":"Calcium","percent":4},{"fact":"Calories","amount":250,"percent":8},{"fact":"Calories from Fat","amount":135},{"fact":"Carbohydrate","percent":4},{"fact":"Cholesterol","amount":40,"percent":13},{"fact":"Dietary Fiber","amount":1,"percent":4},{"fact":"Iron","percent":10},{"fact":"Protein","amount":15,"percent":24},{"fact":"Saturated Fat","amount":3.5,"percent":18},{"fact":"Sodium","amount":570,"percent":24},{"fact":"Sugars","amount":8,"percent":0},{"fact":"Total Carbs","amount":13,"percent":4},{"fact":"Total Fat","percent":23},{"fact":"Trans Fat","percent":0},{"fact":"Vitamin A","percent":0},{"fact":"Vitamin C","percent":0}])



PHP
^^^

If you request data in
(http://www.php.net/manual/en/language.oop5.serialization.php[serialized])
PHP format (e.g.,
http://food.cs50.net/api/1.3/facts?recipe=117003&portion=1&output=php),
the response will be a serialized array of associative arrays, per the
below:

[code,php]

a:16:{i:0;a:2:{s:4:"fact";s:7:"Calcium";s:7:"percent";d:4;}i:1;a:3:{s:4:"fact";s:8:"Calories";s:6:"amount";d:250;s:7:"percent";d:8;}i:2;a:2:{s:4:"fact";s:17:"Calories from Fat";s:6:"amount";d:135;}i:3;a:2:{s:4:"fact";s:12:"Carbohydrate";s:7:"percent";d:4;}i:4;a:3:{s:4:"fact";s:11:"Cholesterol";s:6:"amount";d:40;s:7:"percent";d:13;}i:5;a:3:{s:4:"fact";s:13:"Dietary Fiber";s:6:"amount";d:1;s:7:"percent";d:4;}i:6;a:2:{s:4:"fact";s:4:"Iron";s:7:"percent";d:10;}i:7;a:3:{s:4:"fact";s:7:"Protein";s:6:"amount";d:15;s:7:"percent";d:24;}i:8;a:3:{s:4:"fact";s:13:"Saturated Fat";s:6:"amount";d:3.5;s:7:"percent";d:18;}i:9;a:3:{s:4:"fact";s:6:"Sodium";s:6:"amount";d:570;s:7:"percent";d:24;}i:10;a:3:{s:4:"fact";s:6:"Sugars";s:6:"amount";d:8;s:7:"percent";d:0;}i:11;a:3:{s:4:"fact";s:11:"Total Carbs";s:6:"amount";d:13;s:7:"percent";d:4;}i:12;a:2:{s:4:"fact";s:9:"Total Fat";s:7:"percent";d:23;}i:13;a:2:{s:4:"fact";s:9:"Trans Fat";s:7:"percent";d:0;}i:14;a:2:{s:4:"fact";s:9:"Vitamin A";s:7:"percent";d:0;}i:15;a:2:{s:4:"fact";s:9:"Vitamin C";s:7:"percent";d:0;}}


Once you http://php.net/manual/en/function.unserialize.php[unserialize]
that response, you'll have the below in memory:

[code,php]
---------------------------------------
Array
(
    [0] => Array
        (
            [fact] => Calcium
            [percent] => 4
        )

    [1] => Array
        (
            [fact] => Calories
            [amount] => 250
            [percent] => 8
        )

    [2] => Array
        (
            [fact] => Calories from Fat
            [amount] => 135
        )

    [3] => Array
        (
            [fact] => Carbohydrate
            [percent] => 4
        )

    [4] => Array
        (
            [fact] => Cholesterol
            [amount] => 40
            [percent] => 13
        )

    [5] => Array
        (
            [fact] => Dietary Fiber
            [amount] => 1
            [percent] => 4
        )

    [6] => Array
        (
            [fact] => Iron
            [percent] => 10
        )

    [7] => Array
        (
            [fact] => Protein
            [amount] => 15
            [percent] => 24
        )

    [8] => Array
        (
            [fact] => Saturated Fat
            [amount] => 3.5
            [percent] => 18
        )

    [9] => Array
        (
            [fact] => Sodium
            [amount] => 570
            [percent] => 24
        )

    [10] => Array
        (
            [fact] => Sugars
            [amount] => 8
            [percent] => 0
        )

    [11] => Array
        (
            [fact] => Total Carbs
            [amount] => 13
            [percent] => 4
        )

    [12] => Array
        (
            [fact] => Total Fat
            [percent] => 23
        )

    [13] => Array
        (
            [fact] => Trans Fat
            [percent] => 0
        )

    [14] => Array
        (
            [fact] => Vitamin A
            [percent] => 0
        )

    [15] => Array
        (
            [fact] => Vitamin C
            [percent] => 0
        )

)
---------------------------------------


menu
~~~~

To query the HarvardFood API for menus, contact the server via URLs in
this format:

`http://food.cs50.net/api/1.3/menus?param1=value1&param2=value2&...`

Supported parameters include:

[cols=",",options="header",]
|=======================================================================
|parameter |description
|callback |_Required iff *output* is *jsonp*_. Callback function with
which response will be padded.

|edt |_Optional._ An end date in *YYYY-MM-DD* format. Menus up through
this date will be returned. If omitted, *sdt* will be assumed.

|meal |_Optional._ Meal to return. Must be *BREAKFAST*, *BRUNCH*,
*LUNCH*, or *DINNER*. (*BRUNCH* and *LUNCH* are treated as synonyms, no
matter the day of the week.) If omitted, all meals will be returned.

|output |_Required._ Format for output. Must be *csv*, *json*, *jsonp*,
or *php*.

|sdt |_Optional._ A start date in *YYYY-MM-DD* format. Menus from this
date onward will be returned. If omitted, the current date will be
assumed.
|=======================================================================

If any parameters are malformed or any required parameters are omitted,
an empty response will be returned along with, possibly, HTTP status
code
http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1[400 Bad
Request].


CSV
^^^

If you request data in CSV format (e.g.,
http://food.cs50.net/api/1.3/menu?meal=BREAKFAST&sdt=2010-11-10&output=csv),
the response will be a series of comma-delimited rows, per the below:

[code,text]
---------------------------------------------------------------------------------------
date,meal,category,recipe,name,portion,unit
2010-11-10,BREAKFAST,"BREAKFAST BAKERY",213012,"Aesops Bagels",1,each
2010-11-10,BREAKFAST,"BREAKFAST BAKERY",213046,"Pistachio Muffin",1,each
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",036003,Waffles,2,each
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",061003,"Scrambled Eggs",4,oz
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",061009,"Hard Cooked Eggs",1,each
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",061009,"Hard Cooked Eggs",1,each
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",061041,"Egg Beaters",4,oz
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",061042,"Egg Whites",4,oz
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",061056,"Eggs Cooked to Order",1,each
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",142539,Hummus,2,oz
2010-11-10,BREAKFAST,"BREAKFAST ENTREES",161049,"Hard Cooked Eggs",1,each
2010-11-10,BREAKFAST,"BREAKFAST MEATS",089003,"Pork Sausage Pattie",2,each
2010-11-10,BREAKFAST,"BREAKFAST MISC",191001,"Warmed Pancake Syrup",1,"fl. oz"
2010-11-10,BREAKFAST,"MAKE OR BUILD YOUR OWN",031003,"Oatmeal Steel Cut",6,"fl. oz"
2010-11-10,BREAKFAST,"MAKE OR BUILD YOUR OWN",031011,"Oatmeal (Rolled Oats)",6,"fl. oz"
---------------------------------------------------------------------------------------

Note that the response's first row defines the CSV file's fields.
Fields' order may change over time, so do not hardcode indices into your
own code. Use that first row to determine fields' indices dynamically,
per this article on link:Neat_Tricks#Parsing_CSV[parsing CSV].


JSON
^^^^

If you request data in JSON format (e.g.,
http://food.cs50.net/api/1.3/menu?meal=BREAKFAST&sdt=2010-11-10&output=json),
the response will be an array of objects, per the below:

[code,javascript]
------------------------------------------
[
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST BAKERY",
      "recipe":"213012",
      "name":"Aesops Bagels",
      "portion":"1",
      "unit":"each"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST BAKERY",
      "recipe":"213046",
      "name":"Pistachio Muffin",
      "portion":"1",
      "unit":"each"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"036003",
      "name":"Waffles",
      "portion":"2",
      "unit":"each"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"061003",
      "name":"Scrambled Eggs",
      "portion":"4",
      "unit":"oz"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"061009",
      "name":"Hard Cooked Eggs",
      "portion":"1",
      "unit":"each"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"061009",
      "name":"Hard Cooked Eggs",
      "portion":"1",
      "unit":"each"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"061041",
      "name":"Egg Beaters",
      "portion":"4",
      "unit":"oz"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"061042",
      "name":"Egg Whites",
      "portion":"4",
      "unit":"oz"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"061056",
      "name":"Eggs Cooked to Order",
      "portion":"1",
      "unit":"each"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"142539",
      "name":"Hummus",
      "portion":"2",
      "unit":"oz"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST ENTREES",
      "recipe":"161049",
      "name":"Hard Cooked Eggs",
      "portion":"1",
      "unit":"each"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST MEATS",
      "recipe":"089003",
      "name":"Pork Sausage Pattie",
      "portion":"2",
      "unit":"each"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"BREAKFAST MISC",
      "recipe":"191001",
      "name":"Warmed Pancake Syrup",
      "portion":"1",
      "unit":"fl. oz"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"MAKE OR BUILD YOUR OWN",
      "recipe":"031003",
      "name":"Oatmeal Steel Cut",
      "portion":"6",
      "unit":"fl. oz"
   },
   {
      "date":"2010-11-10",
      "meal":"BREAKFAST",
      "category":"MAKE OR BUILD YOUR OWN",
      "recipe":"031011",
      "name":"Oatmeal (Rolled Oats)",
      "portion":"6",
      "unit":"fl. oz"
   }
]
------------------------------------------


JSONP
^^^^^

If you request data in JSONP format (e.g.,
http://food.cs50.net/api/1.3/menu?meal=BREAKFAST&sdt=2010-11-10&output=jsonp&callback=parseResponse),
the response will be a padded array of objects, per the below:

[code,javascript]

parseResponse([{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST BAKERY","recipe":"213012","name":"Aesops Bagels","portion":"1","unit":"each"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST BAKERY","recipe":"213046","name":"Pistachio Muffin","portion":"1","unit":"each"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"036003","name":"Waffles","portion":"2","unit":"each"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"061003","name":"Scrambled Eggs","portion":"4","unit":"oz"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"061009","name":"Hard Cooked Eggs","portion":"1","unit":"each"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"061009","name":"Hard Cooked Eggs","portion":"1","unit":"each"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"061041","name":"Egg Beaters","portion":"4","unit":"oz"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"061042","name":"Egg Whites","portion":"4","unit":"oz"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"061056","name":"Eggs Cooked to Order","portion":"1","unit":"each"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"142539","name":"Hummus","portion":"2","unit":"oz"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST ENTREES","recipe":"161049","name":"Hard Cooked Eggs","portion":"1","unit":"each"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST MEATS","recipe":"089003","name":"Pork Sausage Pattie","portion":"2","unit":"each"},{"date":"2010-11-10","meal":"BREAKFAST","category":"BREAKFAST MISC","recipe":"191001","name":"Warmed Pancake Syrup","portion":"1","unit":"fl. oz"},{"date":"2010-11-10","meal":"BREAKFAST","category":"MAKE OR BUILD YOUR OWN","recipe":"031003","name":"Oatmeal Steel Cut","portion":"6","unit":"fl. oz"},{"date":"2010-11-10","meal":"BREAKFAST","category":"MAKE OR BUILD YOUR OWN","recipe":"031011","name":"Oatmeal (Rolled Oats)","portion":"6","unit":"fl. oz"}])



PHP
^^^

If you request data in
(http://www.php.net/manual/en/language.oop5.serialization.php[serialized])
PHP format (e.g.,
http://food.cs50.net/api/1.3/menu?meal=BREAKFAST&sdt=2010-11-10&output=php),
the response will be a serialized array of associative arrays, per the
below:

[code,php]

a:15:{i:0;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:16:"BREAKFAST BAKERY";s:6:"recipe";s:6:"213012";s:4:"name";s:13:"Aesops Bagels";s:7:"portion";s:1:"1";s:4:"unit";s:4:"each";}i:1;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:16:"BREAKFAST BAKERY";s:6:"recipe";s:6:"213046";s:4:"name";s:16:"Pistachio Muffin";s:7:"portion";s:1:"1";s:4:"unit";s:4:"each";}i:2;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"036003";s:4:"name";s:7:"Waffles";s:7:"portion";s:1:"2";s:4:"unit";s:4:"each";}i:3;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"061003";s:4:"name";s:14:"Scrambled Eggs";s:7:"portion";s:1:"4";s:4:"unit";s:2:"oz";}i:4;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"061009";s:4:"name";s:16:"Hard Cooked Eggs";s:7:"portion";s:1:"1";s:4:"unit";s:4:"each";}i:5;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"061009";s:4:"name";s:16:"Hard Cooked Eggs";s:7:"portion";s:1:"1";s:4:"unit";s:4:"each";}i:6;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"061041";s:4:"name";s:11:"Egg Beaters";s:7:"portion";s:1:"4";s:4:"unit";s:2:"oz";}i:7;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"061042";s:4:"name";s:10:"Egg Whites";s:7:"portion";s:1:"4";s:4:"unit";s:2:"oz";}i:8;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"061056";s:4:"name";s:20:"Eggs Cooked to Order";s:7:"portion";s:1:"1";s:4:"unit";s:4:"each";}i:9;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"142539";s:4:"name";s:6:"Hummus";s:7:"portion";s:1:"2";s:4:"unit";s:2:"oz";}i:10;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:17:"BREAKFAST ENTREES";s:6:"recipe";s:6:"161049";s:4:"name";s:16:"Hard Cooked Eggs";s:7:"portion";s:1:"1";s:4:"unit";s:4:"each";}i:11;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:15:"BREAKFAST MEATS";s:6:"recipe";s:6:"089003";s:4:"name";s:19:"Pork Sausage Pattie";s:7:"portion";s:1:"2";s:4:"unit";s:4:"each";}i:12;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:14:"BREAKFAST MISC";s:6:"recipe";s:6:"191001";s:4:"name";s:20:"Warmed Pancake Syrup";s:7:"portion";s:1:"1";s:4:"unit";s:6:"fl. oz";}i:13;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:22:"MAKE OR BUILD YOUR OWN";s:6:"recipe";s:6:"031003";s:4:"name";s:17:"Oatmeal Steel Cut";s:7:"portion";s:1:"6";s:4:"unit";s:6:"fl. oz";}i:14;a:7:{s:4:"date";s:10:"2010-11-10";s:4:"meal";s:9:"BREAKFAST";s:8:"category";s:22:"MAKE OR BUILD YOUR OWN";s:6:"recipe";s:6:"031011";s:4:"name";s:21:"Oatmeal (Rolled Oats)";s:7:"portion";s:1:"6";s:4:"unit";s:6:"fl. oz";}}


Once you http://php.net/manual/en/function.unserialize.php[unserialize]
that response, you'll have the below in memory:

[code,php]
------------------------------------------------
Array
(
    [0] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST BAKERY
            [recipe] => 213012
            [name] => Aesops Bagels
            [portion] => 1
            [unit] => each
        )

    [1] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST BAKERY
            [recipe] => 213046
            [name] => Pistachio Muffin
            [portion] => 1
            [unit] => each
        )

    [2] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 036003
            [name] => Waffles
            [portion] => 2
            [unit] => each
        )

    [3] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 061003
            [name] => Scrambled Eggs
            [portion] => 4
            [unit] => oz
        )

    [4] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 061009
            [name] => Hard Cooked Eggs
            [portion] => 1
            [unit] => each
        )

    [5] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 061009
            [name] => Hard Cooked Eggs
            [portion] => 1
            [unit] => each
        )

    [6] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 061041
            [name] => Egg Beaters
            [portion] => 4
            [unit] => oz
        )

    [7] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 061042
            [name] => Egg Whites
            [portion] => 4
            [unit] => oz
        )

    [8] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 061056
            [name] => Eggs Cooked to Order
            [portion] => 1
            [unit] => each
        )

    [9] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 142539
            [name] => Hummus
            [portion] => 2
            [unit] => oz
        )

    [10] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST ENTREES
            [recipe] => 161049
            [name] => Hard Cooked Eggs
            [portion] => 1
            [unit] => each
        )

    [11] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST MEATS
            [recipe] => 089003
            [name] => Pork Sausage Pattie
            [portion] => 2
            [unit] => each
        )

    [12] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => BREAKFAST MISC
            [recipe] => 191001
            [name] => Warmed Pancake Syrup
            [portion] => 1
            [unit] => fl. oz
        )

    [13] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => MAKE OR BUILD YOUR OWN
            [recipe] => 031003
            [name] => Oatmeal Steel Cut
            [portion] => 6
            [unit] => fl. oz
        )

    [14] => Array
        (
            [date] => 2010-11-10
            [meal] => BREAKFAST
            [category] => MAKE OR BUILD YOUR OWN
            [recipe] => 031011
            [name] => Oatmeal (Rolled Oats)
            [portion] => 6
            [unit] => fl. oz
        )

)
------------------------------------------------


recipe
~~~~~~

To query the HarvardFood API for a recipe, contact the server via URLs
in this format:

`http://food.cs50.net/api/1.3/recipe?param1=value1`

Supported parameters include:

[cols=",",options="header",]
|====================================
|parameter |description
|id |_Required._ ID of recipe to get.
|====================================

If any parameters are malformed or any required parameters are omitted,
an empty response will be returned along with, possibly, HTTP status
code
http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1[400 Bad
Request].

Among the fields returned will be a recipe's usual serving size.


CSV
^^^

If you request data in CSV format (e.g.,
http://food.cs50.net/api/1.3/recipe?id=117003&output=csv), the response
will be a series of comma-delimited rows, per the below:

[code,text]

id,name,size,unit,ingredients,VEGETARIAN,VEGAN,"MOLLIE KATZEN",LOCAL,ORGANIC
117003,Chickwich,1,each,"Chicken Patty (* INGREDIENT STATEMENT * Chicken breast with rib meat, water, vegetable protein product (isolated soy protein, magnesium oxide, zinc oxide, niacinamide, ferrous sulfate, vitamin B12, copper gluconate, vitamin A palmitate, calcium pantothenate, pyridoxine hydrochloride, thiamine mononitrate, riboflavin), dried whole egg, seasoning (salt, onion powder, modified corn starch, natural flavor), and sodium phosphates. BREADED WITH: Enriched wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), water, enriched bleached wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), salt, modified corn starch, spices, dextrose, garlic powder, oleoresin paprika and annatto, xanthan gum, and natural flavors. Breading set in vegetable oil.)",FALSE,FALSE,FALSE,FALSE,FALSE


Note that the response's first row defines the CSV file's fields.
Fields' order may change over time, so do not hardcode indices into your
own code. Use that first row to determine fields' indices dynamically,
per this article on link:Neat_Tricks#Parsing_CSV[parsing CSV].


JSON
^^^^

If you request data in JSON format (e.g.,
http://food.cs50.net/api/1.3/recipe?id=117003&output=csv), the response
will be an array of objects, per the below:

[code,javascript]

{
   "id":"117003",
   "name":"Chickwich",
   "size":"1",
   "unit":"each",
   "ingredients":"Chicken Patty (* INGREDIENT STATEMENT * Chicken breast with rib meat, water, vegetable protein product (isolated soy protein, magnesium oxide, zinc oxide, niacinamide, ferrous sulfate, vitamin B12, copper gluconate, vitamin A palmitate, calcium pantothenate, pyridoxine hydrochloride, thiamine mononitrate, riboflavin), dried whole egg, seasoning (salt, onion powder, modified corn starch, natural flavor), and sodium phosphates. BREADED WITH: Enriched wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), water, enriched bleached wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), salt, modified corn starch, spices, dextrose, garlic powder, oleoresin paprika and annatto, xanthan gum, and natural flavors. Breading set in vegetable oil.)",
   "VEGETARIAN":"FALSE",
   "VEGAN":"FALSE",
   "MOLLIE KATZEN":"FALSE",
   "LOCAL":"FALSE",
   "ORGANIC":"FALSE"
}



JSONP
^^^^^

If you request data in JSONP format (e.g.,
http://food.cs50.net/api/1.3/recipe?id=117003&output=jsonp&callback=parseResponse),
the response will be an object, per the below:

[code,javascript]

parseResponse({"id":"117003","name":"Chickwich","size":"1","unit":"each","ingredients":"Chicken Patty (* INGREDIENT STATEMENT * Chicken breast with rib meat, water, vegetable protein product (isolated soy protein, magnesium oxide, zinc oxide, niacinamide, ferrous sulfate, vitamin B12, copper gluconate, vitamin A palmitate, calcium pantothenate, pyridoxine hydrochloride, thiamine mononitrate, riboflavin), dried whole egg, seasoning (salt, onion powder, modified corn starch, natural flavor), and sodium phosphates. BREADED WITH: Enriched wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), water, enriched bleached wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), salt, modified corn starch, spices, dextrose, garlic powder, oleoresin paprika and annatto, xanthan gum, and natural flavors. Breading set in vegetable oil.)","VEGETARIAN":"FALSE","VEGAN":"FALSE","MOLLIE KATZEN":"FALSE","LOCAL":"FALSE","ORGANIC":"FALSE"})



PHP
^^^

If you request data in
(http://www.php.net/manual/en/language.oop5.serialization.php[serialized])
PHP format (e.g.,
http://food.cs50.net/api/1.3/recipe?id=117003&output=php), the response
will be a serialized array of associative arrays, per the below:

[code,php]

a:10:{s:2:"id";s:6:"117003";s:4:"name";s:9:"Chickwich";s:4:"size";s:1:"1";s:4:"unit";s:4:"each";s:11:"ingredients";s:833:"Chicken Patty (* INGREDIENT STATEMENT * Chicken breast with rib meat, water, vegetable protein product (isolated soy protein, magnesium oxide, zinc oxide, niacinamide, ferrous sulfate, vitamin B12, copper gluconate, vitamin A palmitate, calcium pantothenate, pyridoxine hydrochloride, thiamine mononitrate, riboflavin), dried whole egg, seasoning (salt, onion powder, modified corn starch, natural flavor), and sodium phosphates. BREADED WITH: Enriched wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), water, enriched bleached wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), salt, modified corn starch, spices, dextrose, garlic powder, oleoresin paprika and annatto, xanthan gum, and natural flavors. Breading set in vegetable oil.)";s:10:"VEGETARIAN";s:5:"FALSE";s:5:"VEGAN";s:5:"FALSE";s:13:"MOLLIE KATZEN";s:5:"FALSE";s:5:"LOCAL";s:5:"FALSE";s:7:"ORGANIC";s:5:"FALSE";}


Once you http://php.net/manual/en/function.unserialize.php[unserialize]
that response, you'll have the below in memory:

[code,php]

Array
(
    [id] => 117003
    [name] => Chickwich
    [size] => 1
    [unit] => each
    [ingredients] => Chicken Patty (* INGREDIENT STATEMENT * Chicken breast with rib meat, water, vegetable protein product (isolated soy protein, magnesium oxide, zinc oxide, niacinamide, ferrous sulfate, vitamin B12, copper gluconate, vitamin A palmitate, calcium pantothenate, pyridoxine hydrochloride, thiamine mononitrate, riboflavin), dried whole egg, seasoning (salt, onion powder, modified corn starch, natural flavor), and sodium phosphates. BREADED WITH: Enriched wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), water, enriched bleached wheat flour (enriched with niacin, ferrous sulfate, thiamine mononitrate, riboflavin, folic acid), salt, modified corn starch, spices, dextrose, garlic powder, oleoresin paprika and annatto, xanthan gum, and natural flavors. Breading set in vegetable oil.)
    [VEGETARIAN] => FALSE
    [VEGAN] => FALSE
    [MOLLIE KATZEN] => FALSE
    [LOCAL] => FALSE
    [ORGANIC] => FALSE
)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Examples
--------

* Returns today's entire menu:
** http://food.cs50.net/api/1.3/menu?output=csv
** http://food.cs50.net/api/1.3/menu?output=json
** http://food.cs50.net/api/1.3/menu?output=jsonp&callback=parseResponse
** http://food.cs50.net/api/1.3/menu?output=php
* Returns today's lunch menu:
** http://food.cs50.net/api/1.3/menu?meal=LUNCH&output=csv
** http://food.cs50.net/api/1.3/menu?meal=LUNCH&output=json
**
http://food.cs50.net/api/1.3/menu?meal=LUNCH&output=jsonp&callback=parseResponse
** http://food.cs50.net/api/1.3/menu?meal=LUNCH&output=php
* Returns 10 November 2010's entire menu:
** http://food.cs50.net/api/1.3/menu?sdt=2010-11-10&output=csv
** http://food.cs50.net/api/1.3/menu?sdt=2010-11-10&output=json
**
http://food.cs50.net/api/1.3/menu?sdt=2010-11-10&output=jsonp&callback=parseResponse
** http://food.cs50.net/api/1.3/menu?sdt=2010-11-10&output=php
* Returns 10 November 2010's breakfast menu:
**
http://food.cs50.net/api/1.3/menu?meal=BREAKFAST&sdt=2010-11-10&output=csv
**
http://food.cs50.net/api/1.3/menu?meal=BREAKFAST&sdt=2010-11-10&output=json
**
http://food.cs50.net/api/1.3/menu?meal=BREAKFAST&sdt=2010-11-10&output=jsonp&callback=parseResponse
**
http://food.cs50.net/api/1.3/menu?meal=BREAKFAST&sdt=2010-11-10&output=php
* Returns a Chickwich's nutritional facts:
** http://food.cs50.net/api/1.3/facts?id=117003&portion=1&output=csv
** http://food.cs50.net/api/1.3/facts?id=117003&portion=1&output=json
**
http://food.cs50.net/api/1.3/facts?id=117003&portion=1&output=jsonp&callback=parseResponse
** http://food.cs50.net/api/1.3/facts?id=117003&portion=1&output=php
* Returns a Chickwich's recipe:
** http://food.cs50.net/api/1.3/recipe?id=117003&output=csv
** http://food.cs50.net/api/1.3/recipe?id=117003&output=json
**
http://food.cs50.net/api/1.3/recipe?id=117003&output=jsonp&callback=parseResponse
** http://food.cs50.net/api/1.3/recipe?id=117003&output=php


See Also
--------

* link:Neat_Tricks#Parsing_CSV[Parsing CSV]
* link:Neat_Tricks#Parsing_Dates.2FTimes[Parsing Dates/Times]
* link:Neat_Tricks#Parsing_JSON[Parsing JSON]
* link:Neat_Tricks#Parsing_RSS[Parsing RSS]
* link:Screen Scraping[Screen Scraping]
* link:Neat_Tricks#Unserializing_PHP[Unserializing PHP]


Related APIs
------------

* link:HarvardCourses API[HarvardCourses API]
* link:HarvardEnergy API[HarvardEnergy API]
* link:HarvardEvents API[HarvardEvents API]
* link:HarvardMaps API[HarvardMaps API]
* link:HarvardNews API[HarvardNews API]
* link:HarvardTweets API[HarvardTweets API]
* link:Shuttleboy API[Shuttleboy API]


External Links
--------------

* http://en.wikipedia.org/wiki/Comma-separated_values[Comma-separated
values]
* http://en.wikipedia.org/wiki/JSON[JSON]
* http://en.wikipedia.org/wiki/JSON#JSONP[JSONP]
* http://php.net/manual/en/function.serialize.php[PHP: serialize]
* http://php.net/manual/en/function.unserialize.php[PHP: unserialize]
* http://en.wikipedia.org/wiki/Web_scraping[Web scraping]


Changelog
---------

* http://wiki.cs50.net.php?title=HarvardFood_API&oldid=1014[1.0]
* http://wiki.cs50.net.php?title=HarvardFood_API&oldid=1645[1.1]
** Added support for JSONP.
* http://wiki.cs50.net.php?title=HarvardFood_API&oldid=3376[1.2]
** Added support for XML.
* 1.3
** Complete overhaul. Added nutritional facts. Added recipes. Added
support for ranges of dates for menus.

Category:APIs
